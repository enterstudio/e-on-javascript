# Copyright 2008 Kevin Reid, under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

pragma.syntax("0.9")

def makeStaticSafeEnv(compiler) {
  def emptySenv := compiler.getEmptyStaticEnv()
  def withSlot := compiler.getBindEnvMaker()
  
  var senv := emptySenv
  for name in [
    # fundamental values
    "null", "false", "true", "Infinity",
    
    # fundamental operators
    "E", "Ref", "throw",
    
    "require",
    "simple__quasiParser",
    
    # ???
    "__makeInt",
    
    # guards
    "any", "all",
    "nullOk", "notNull", "void",
    "int", "boolean", "float64", "char", "String",
    "List", "Map", "Tuple",
    "Guard", "TextWriter",
    "DeepFrozen", "pbc", "PassByCopy", "Selfless",
    
    # stuff for expansions
    "__makeList", "__makeMap", "__equalizer", "__comparer",  "__loop", "__bind", "__makeOrderedSpace", "__Test", "__is", "__splitList",
    
    "import__uriGetter", "type__uriGetter",
    
  ] {
    senv := withSlot(senv, name)
  }
  return senv
}